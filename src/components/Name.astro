---
// Name.astro - a component for a plain-text name entry with a link to their page, and a popup infobox that displays when you hover over the name's name.
import { type CollectionEntry } from 'astro:content'
import { Icon } from 'astro-icon/components'
import Hover from './Hover.astro'
import Social from './Social.astro'
import Image from './Image.astro'
import { getEntry } from 'astro:content'

// TODO: add mail icon

type Props = {
	name: CollectionEntry<'names'> | string
}

// extract, but it may be a string or an object...
const { name: name_ } = Astro.props

// so, detect and fetch the entry if needed
const name = name_ && name_.data ? name_ : await getEntry('names', name_.id || name_)

// generate the URL for the name
const href = `/names/${name.id}`
---

<a class='author-name' href={href}>{name.data.name}</a>

<!-- <Hover class='name-hover'>
	<a slot='text' href={href} class='name-name'>{name.data.name}</a>
	<Image src={name.data.image} alt={'alt text'} />
	<span class='name-hover-info'>
		<span class='name-hover-socials'>
			{Object.entries(name.data.socials).map(([social, tag]) => <Social social={social} tag={tag} />)}
		</span>

		<span class='name-hover-blurb'>
			{name.data.blurb}
		</span>
	</span>
</Hover> -->

<style>
	a.author-name {
		font-weight: bold;
		color: inherit;
	}
</style>

<!-- <style>
	a.name-name {
		font-weight: bold;
		color: inherit;
	}

	.name-hover > span {
		/* padding: 0.25em; */
		font-size: 0.9em;
		display: inline-flex;
		flex-direction: column;
	}
	.name-hover span.name-hover-info {
		height: 100%;
		padding: 0.5em;
		/* center the text */
		justify-content: center;
		align-items: center;
	}

	.name-hover span.name-hover-socials {
		font-size: 1.1em;
		/* margin-top: 0.25em; */
		/* center icons */
		display: inline-flex;
		/* justify-content: center; */
		/* vertical-align: middle; */
		/* align-items: center; */
		width: 100%;
	}

	span.name-hover-blurb {
		width: 100%;
		/* margin: 0 0.5em; */
	}
</style> -->
